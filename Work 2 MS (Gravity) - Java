Листинг файла манифеста проекта:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Sensors"
        tools:targetApi="31">
        <activity
            android:name=".SensorsList"
            android:exported="false">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
    </application>

</manifest>


Листинг файла строковых констант strings.xml:
<resources>
    <string name="app_name">My sensors</string>
    <string name="Label1">Показания датчиков</string>
    <string name="SLabel"><b>Gravity</b> - датчик, который измеряет ускорение устройства и предоставляет данные о его наклоне при вращении вокруг каждой из трех осей </string>
    <string name="XLabel">x = %1$s</string>
    <string name="YLabel">y = %1$s</string>
    <string name="ZLabel">z = %1$s</string>
    <string name="SensorsList">Список датчиков</string>
    <string name="typeind">индекс типа: </string>
    <string name="producer">производитель: </string>
    <string name="version">версия: </string>
    <string name="power">мощность: </string>
    <string name="delay">задержка: [</string>
    <string name="maxmean">макс. значение: </string>
    <string name="accuracy">точность: </string>
    <string name="mw"> мВт</string>
    <string name="mks">] мкс</string>
</resources>
Листинг файла цветовых констант colors.xml:
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="ser">#FFC0C0C0</color>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>
    <color name="grey">#FF808080</color>
    <color name="siren">#7893AD</color>
    <color name="fiol">#9BBBDA</color>
    <color name="purp">#405F7E</color>
    <color name="svet_myat">#FF86CABB </color>
    <color name="myat">#FF62A193</color>
    <color name="tem_myat">#FF3B7568 </color>
    <color name="roz">#FFCB4335 </color>
    <color name="orange">#FFF39C12 </color>
</resources>

Листинг файла светлой темы:
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.MyApplication" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your light theme here. -->
        <!-- <item name="colorPrimary">@color/my_light_primary</item> -->
    </style>

    <style name="Theme.MyApplication" parent="Base.Theme.MyApplication" />
</resources>
Листинг файла темной темы:
<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Base.Theme.MyApplication" parent="Theme.Material3.DayNight.NoActionBar">
        <!-- Customize your dark theme here. -->
        <!-- <item name="colorPrimary">@color/my_dark_primary</item> -->
    </style>
</resources>

Разметка макетов графических интерфейсов
activity_main.xml:
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">


    <TextView
        android:id="@+id/sensor1value"
        android:layout_width="360dp"
        android:layout_height="wrap_content"
        android:fontFamily="serif"
        android:text="@string/SLabel"
        android:textAlignment="gravity"
        android:textColor="@color/siren"
        android:textSize="25sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.686"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/button"
        app:layout_constraintVertical_bias="0.051" />

    <TextView
        android:id="@+id/sensorX"
        android:layout_width="170dp"
        android:layout_height="40dp"
        android:layout_marginTop="56dp"
        android:fontFamily="serif"
        android:text="@string/XLabel"
        android:textColor="@color/purp"
        android:textSize="30sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.614"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/sensor1value" />

    <TextView
        android:id="@+id/sensorY"
        android:layout_width="170dp"
        android:layout_height="40dp"
        android:layout_marginTop="16dp"
        android:fontFamily="serif"
        android:text="@string/YLabel"
        android:textColor="@color/fiol"
        android:textSize="30sp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.614"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/sensorX" />

    <TextView
        android:id="@+id/sensorZ"
        android:layout_width="170dp"
        android:layout_height="40dp"
        android:layout_marginTop="13dp"
        android:fontFamily="serif"
        android:text="@string/ZLabel"
        android:textColor="@color/siren"
        android:textSize="30sp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.614"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/sensorY"
        app:layout_constraintVertical_bias="0.027" />

    <Button
        android:id="@+id/button"
        style="@style/Button.Orange"
        android:layout_width="360dp"
        android:layout_height="75dp"
        android:backgroundTint="@color/siren"
        android:fontFamily="serif"
        android:onClick="Click"
        android:text="@string/SensorsList"
        android:textSize="25sp"
        app:icon="@android:drawable/ic_menu_send"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.042" />

</androidx.constraintlayout.widget.ConstraintLayout>

Листинг MainActivity.Java
package com.exapmle.gravity;
import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.widget.TextView;
import android.content.res.Resources;
import android.content.Intent;
import android.view.View;

public class MainActivity extends AppCompatActivity {

    private TextView sTxtValue;
    private TextView sTxtX;
    private TextView sTxtY;
    private TextView sTxtZ;
    private SensorManager sensorManager;
    private Sensor mSensor;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //с объектом sTxtValue сопрягаем виджет R.id.sensor1value
        sTxtValue = (TextView) findViewById(R.id.sensor1value);
        sTxtX = (TextView) findViewById(R.id.sensorX);
        sTxtY = (TextView) findViewById(R.id.sensorY);
        sTxtZ = (TextView) findViewById(R.id.sensorZ);

        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        //указываем тип датчика для получения с него значений
        mSensor = sensorManager.getDefaultSensor(Sensor.TYPE_GRAVITY);
    }

    @Override
    protected void onStart() {
        //при запуске активности выполняется код ниже
        super.onStart();
    }

    @Override
    protected void onResume() {
        //регистрируем слушателя указанного датчика
        sensorManager.registerListener(listener, mSensor, SensorManager.SENSOR_DELAY_NORMAL);
        //для класса-родителя
        super.onResume();
    }

    protected void onPause() {
        //для класса-родителя
        super.onPause();
        //приостановка слушателя датчика
        sensorManager.unregisterListener(listener);
    }

    private final SensorEventListener listener = new SensorEventListener() {

        public void onSensorChanged(SensorEvent event) {
            //к переменным присваиваем форматированный "ответ" от датчика
            String valueX = String.format("%.2f",event.values[0]);
            String valueY = String.format("%.2f",event.values[1]);
            String valueZ = String.format("%.2f",event.values[2]);
            Resources res = getResources();
            //в переменные textX, textY, textZ помещаем текст с подстановкой трех значений от датчика
            String text = String.format(getString(R.string.SLabel));
            String textX = String.format(getString(R.string.XLabel), valueX);
            String textY = String.format(getString(R.string.YLabel), valueY);
            String textZ = String.format(getString(R.string.ZLabel), valueZ);
            //выводим соответсующие данные
            sTxtValue.setText(text);
            sTxtX.setText(textX);
            sTxtY.setText(textY);
            sTxtZ.setText(textZ);
        }

        //вызываем этот метод при изменении точности датчика
        public void onAccuracyChanged(Sensor sensor, int accuracy) {

        }
    };
    public void Click(View view) {
        //создаем новое намерение для перехода на другую активность:
        Intent intent=new Intent(MainActivity.this,SensorsList.class);
        //запускаем активность:
        startActivity(intent);
    }}
